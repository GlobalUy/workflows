name: Build and Push to ECR

on:
  workflow_call:
    inputs:
      aws-region:
        type: string
        required: false
        default: us-west-2
      ecr-repository:
        type: string
        required: true
    outputs:
      tag:
        description: "Docker image tag"
        value: ${{ jobs.build_and_push.outputs.tag }}
    secrets:
      PAT_TOKEN:
        required: true
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  check_organization:
    name: Check Organization
    uses: globaluy/workflows/.github/workflows/org.yml@v1.0.0

  build_and_push:
    needs: check_organization
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.image-tag.outputs.tag }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          submodules: recursive

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker image tag
        id: image-tag
        run: echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build, tag and push image
        env:
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: ${{ inputs.ecr-repository }}
          IMAGE_TAG: ${{ steps.image-tag.outputs.tag }}
        run: |
          docker buildx b --progress plain --load -f ./Dockerfile -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
